{"version":3,"names":["Piece","React","memo","forwardRef","ref","id","startPosition","square","size","chess","useChessEngine","refs","usePieceRefs","pieceEnabled","useSharedValue","isPromoting","useBoardPromotion","onSelectPiece","onMove","selectedSquare","turn","useBoardOperations","durations","move","moveDuration","gestureEnabled","gestureEnabledFromChessboardProps","useChessboardProps","useDerivedValue","value","charAt","toPosition","toTranslation","useReversePiecePosition","isGestureActive","offsetX","offsetY","scale","translateX","x","translateY","y","validateMove","useCallback","from","to","moves","verbose","find","m","wrappedOnMoveForJSThread","moveTo","Promise","resolve","withTiming","duration","isFinished","runOnJS","undefined","movePiece","useImperativeHandle","enable","active","onStartTap","globalMoveTo","current","handleOnBegin","currentSquare","previousTappedSquare","gesture","Gesture","Pan","enabled","onBegin","onStart","onUpdate","translationX","translationY","onEnd","onFinalize","style","useAnimatedStyle","position","opacity","zIndex","transform","underlay","translation","width","height","borderRadius","backgroundColor","prev","next"],"sources":["index.tsx"],"sourcesContent":["import type { Move, Square } from 'chess.js';\nimport React, { useCallback, useImperativeHandle } from 'react';\nimport { Gesture, GestureDetector } from 'react-native-gesture-handler';\nimport Animated, {\n  runOnJS,\n  useAnimatedStyle,\n  useDerivedValue,\n  useSharedValue,\n  withTiming,\n} from 'react-native-reanimated';\nimport { useChessboardProps } from '../../context/props-context/hooks';\nimport { useBoardOperations } from '../../context/board-operations-context/hooks';\nimport { useBoardPromotion } from '../../context/board-promotion-context/hooks';\nimport { usePieceRefs } from '../../context/board-refs-context/hooks';\nimport { useChessEngine } from '../../context/chess-engine-context/hooks';\nimport { useReversePiecePosition } from '../../notation';\nimport type { PieceType, Vector } from '../../types';\n\nimport { ChessPiece } from './visual-piece';\n\ntype PieceProps = {\n  id: PieceType;\n  startPosition: Vector;\n  square: Square;\n  size: number;\n};\n\nexport type ChessPieceRef = {\n  moveTo: (square: Square) => Promise<Move | undefined>;\n  enable: (activate: boolean) => void;\n};\n\nconst Piece = React.memo(\n  React.forwardRef<ChessPieceRef, PieceProps>(\n    ({ id, startPosition, square, size }, ref) => {\n      const chess = useChessEngine();\n      const refs = usePieceRefs();\n      const pieceEnabled = useSharedValue(true);\n      const { isPromoting } = useBoardPromotion();\n      const { onSelectPiece, onMove, selectedSquare, turn } =\n        useBoardOperations();\n\n      const {\n        durations: { move: moveDuration },\n        gestureEnabled: gestureEnabledFromChessboardProps,\n      } = useChessboardProps();\n\n      const gestureEnabled = useDerivedValue(\n        () => turn.value === id.charAt(0) && gestureEnabledFromChessboardProps,\n        [id, gestureEnabledFromChessboardProps]\n      );\n\n      const { toPosition, toTranslation } = useReversePiecePosition();\n\n      const isGestureActive = useSharedValue(false);\n      const offsetX = useSharedValue(0);\n      const offsetY = useSharedValue(0);\n      const scale = useSharedValue(1);\n\n      const translateX = useSharedValue(startPosition.x * size);\n      const translateY = useSharedValue(startPosition.y * size);\n\n      const validateMove = useCallback(\n        (from: Square, to: Square) => {\n          return chess\n            .moves({ verbose: true })\n            .find((m) => m.from === from && m.to === to);\n        },\n        [chess]\n      );\n\n      const wrappedOnMoveForJSThread = useCallback(\n        ({ move }: { move: Move }) => {\n          onMove(move.from, move.to);\n        },\n        [onMove]\n      );\n\n      const moveTo = useCallback(\n        (from: Square, to: Square) => {\n          return new Promise<Move | undefined>((resolve) => {\n            const move = validateMove(from, to);\n            const { x, y } = toTranslation(move ? move.to : from);\n            translateX.value = withTiming(x, { duration: moveDuration }, () => {\n              offsetX.value = translateX.value;\n            });\n            translateY.value = withTiming(\n              y,\n              { duration: moveDuration },\n              (isFinished) => {\n                if (!isFinished) return;\n                offsetY.value = translateY.value;\n                isGestureActive.value = false;\n                if (move) {\n                  runOnJS(wrappedOnMoveForJSThread)({ move });\n                  // Ideally I must call the resolve method\n                  // inside the \"wrappedOnMoveForJSThread\" after\n                  // the \"onMove\" function.\n                  // Unfortunately I'm not able to pass a\n                  // function in the RunOnJS params\n                  runOnJS(resolve)(move);\n                } else {\n                  runOnJS(resolve)(undefined);\n                }\n              }\n            );\n          });\n        },\n        [\n          isGestureActive,\n          moveDuration,\n          offsetX,\n          offsetY,\n          toTranslation,\n          translateX,\n          translateY,\n          validateMove,\n          wrappedOnMoveForJSThread,\n        ]\n      );\n\n      const movePiece = useCallback(\n        (to: Square) => {\n          const from = toPosition({ x: offsetX.value, y: offsetY.value });\n          moveTo(from, to);\n        },\n        [moveTo, offsetX.value, offsetY.value, toPosition]\n      );\n\n      useImperativeHandle(\n        ref,\n        () => {\n          return {\n            moveTo: (to: Square) => {\n              return moveTo(square, to);\n            },\n            enable: (active: boolean) => {\n              pieceEnabled.value = active;\n            },\n          };\n        },\n        [moveTo, pieceEnabled, square]\n      );\n\n      const onStartTap = useCallback(\n        // eslint-disable-next-line no-shadow\n        (square: Square) => {\n          'worklet';\n          if (!onSelectPiece) {\n            return;\n          }\n          runOnJS(onSelectPiece)(square);\n        },\n        [onSelectPiece]\n      );\n\n      const globalMoveTo = useCallback(\n        (move: Move) => {\n          refs?.current?.[move.from].current.moveTo?.(move.to);\n        },\n        [refs]\n      );\n\n      const handleOnBegin = useCallback(() => {\n        const currentSquare = toPosition({\n          x: translateX.value,\n          y: translateY.value,\n        });\n\n        const previousTappedSquare = selectedSquare.value;\n        const move =\n          previousTappedSquare &&\n          validateMove(previousTappedSquare, currentSquare);\n\n        if (move) {\n          runOnJS(globalMoveTo)(move);\n          return;\n        }\n        if (!gestureEnabled.value) return;\n        scale.value = withTiming(1.2);\n        onStartTap(square);\n      }, [\n        gestureEnabled.value,\n        globalMoveTo,\n        onStartTap,\n        scale,\n        selectedSquare.value,\n        square,\n        toPosition,\n        translateX.value,\n        translateY.value,\n        validateMove,\n      ]);\n\n      const gesture = Gesture.Pan()\n        .enabled(!isPromoting && pieceEnabled.value)\n        .onBegin(() => {\n          offsetX.value = translateX.value;\n          offsetY.value = translateY.value;\n          runOnJS(handleOnBegin)();\n        })\n        .onStart(() => {\n          if (!gestureEnabled.value) return;\n          isGestureActive.value = true;\n        })\n        .onUpdate(({ translationX, translationY }) => {\n          if (!gestureEnabled.value) return;\n          translateX.value = offsetX.value + translationX;\n          translateY.value = offsetY.value + translationY;\n        })\n        .onEnd(() => {\n          if (!gestureEnabled.value) return;\n          runOnJS(movePiece)(\n            toPosition({ x: translateX.value, y: translateY.value })\n          );\n        })\n        .onFinalize(() => {\n          scale.value = withTiming(1);\n        });\n\n      const style = useAnimatedStyle(() => {\n        return {\n          position: 'absolute',\n          opacity: withTiming(pieceEnabled.value ? 1 : 0),\n          zIndex: isGestureActive.value ? 100 : 10,\n          transform: [\n            { translateX: translateX.value },\n            { translateY: translateY.value },\n            { scale: scale.value },\n          ],\n        };\n      });\n\n      const underlay = useAnimatedStyle(() => {\n        const position = toPosition({\n          x: translateX.value,\n          y: translateY.value,\n        });\n        const translation = toTranslation(position);\n        return {\n          position: 'absolute',\n          width: size * 2,\n          height: size * 2,\n          borderRadius: size,\n          zIndex: 0,\n          backgroundColor: isGestureActive.value\n            ? 'rgba(0, 0, 0, 0.1)'\n            : 'transparent',\n          transform: [\n            { translateX: translation.x - size / 2 },\n            { translateY: translation.y - size / 2 },\n          ],\n        };\n      }, [size]);\n\n      return (\n        <>\n          <Animated.View style={underlay} />\n          <GestureDetector gesture={gesture}>\n            <Animated.View style={style}>\n              <ChessPiece id={id} />\n            </Animated.View>\n          </GestureDetector>\n        </>\n      );\n    }\n  ),\n  (prev, next) =>\n    prev.id === next.id &&\n    prev.size === next.size &&\n    prev.square === next.square\n);\n\nexport default Piece;\n"],"mappings":"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"}