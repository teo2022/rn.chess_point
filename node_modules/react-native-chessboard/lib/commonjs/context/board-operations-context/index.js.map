{"version":3,"names":["BoardOperationsContext","createContext","BoardOperationsContextProviderComponent","React","forwardRef","ref","children","controller","chess","useChessEngine","setBoard","useSetBoard","pieceSize","onMove","onChessboardMoveCallback","colors","checkmateHighlight","useChessboardProps","toTranslation","useReversePiecePosition","selectableSquares","useSharedValue","selectedSquare","showPromotionDialog","useBoardPromotion","pieceRefs","usePieceRefs","turn","useImperativeHandle","reset","value","resetAllHighlightedSquares","isPromoting","useCallback","from","to","includes","val","x","Math","floor","y","piece","board","type","PAWN","color","WHITE","BLACK","findKing","length","row","col","String","fromCharCode","round","square","get","charAt","moveProgrammatically","promotionPiece","move","promotion","isCheckmate","in_checkmate","highlight","state","getChessboardState","in_promotion","lastMove","current","enable","onSelect","onSelectPiece","validSquares","moves","map","splittedSquare","split","moveTo","useMemo","BoardOperationsContextProvider","memo"],"sources":["index.tsx"],"sourcesContent":["import type { PieceType, Square } from 'chess.js';\nimport React, {\n  createContext,\n  useCallback,\n  useImperativeHandle,\n  useMemo,\n} from 'react';\nimport type Animated from 'react-native-reanimated';\nimport { useSharedValue } from 'react-native-reanimated';\nimport { getChessboardState } from '../../helpers/get-chessboard-state';\n\nimport { useReversePiecePosition } from '../../notation';\nimport { useSetBoard } from '../board-context/hooks';\nimport { useBoardPromotion } from '../board-promotion-context/hooks';\nimport type { ChessboardRef } from '../board-refs-context';\nimport { usePieceRefs } from '../board-refs-context/hooks';\nimport { useChessEngine } from '../chess-engine-context/hooks';\nimport { useChessboardProps } from '../props-context/hooks';\n\ntype BoardOperationsContextType = {\n  selectableSquares: Animated.SharedValue<Square[]>;\n  onMove: (from: Square, to: Square) => void;\n  onSelectPiece: (square: Square) => void;\n  moveTo: (to: Square) => void;\n  isPromoting: (from: Square, to: Square) => boolean;\n  selectedSquare: Animated.SharedValue<Square | null>;\n  turn: Animated.SharedValue<'w' | 'b'>;\n};\n\nconst BoardOperationsContext = createContext<BoardOperationsContextType>(\n  {} as any\n);\n\nexport type BoardOperationsRef = {\n  reset: () => void;\n};\n\nconst BoardOperationsContextProviderComponent = React.forwardRef<\n  BoardOperationsRef,\n  { controller?: ChessboardRef; children?: React.ReactNode }\n>(({ children, controller }, ref) => {\n  const chess = useChessEngine();\n  const setBoard = useSetBoard();\n  const {\n    pieceSize,\n    onMove: onChessboardMoveCallback,\n    colors: { checkmateHighlight },\n  } = useChessboardProps();\n  const { toTranslation } = useReversePiecePosition();\n  const selectableSquares = useSharedValue<Square[]>([]);\n  const selectedSquare = useSharedValue<Square | null>(null);\n  const { showPromotionDialog } = useBoardPromotion();\n  const pieceRefs = usePieceRefs();\n\n  const turn = useSharedValue(chess.turn());\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      reset: () => {\n        selectableSquares.value = [];\n        controller?.resetAllHighlightedSquares();\n        turn.value = chess.turn();\n      },\n    }),\n    [chess, controller, selectableSquares, turn]\n  );\n\n  const isPromoting = useCallback(\n    (from: Square, to: Square) => {\n      if (!to.includes('8') && !to.includes('1')) return false;\n\n      const val = toTranslation(from);\n      const x = Math.floor(val.x / pieceSize);\n      const y = Math.floor(val.y / pieceSize);\n      const piece = chess.board()[y][x];\n\n      return (\n        piece?.type === chess.PAWN &&\n        ((to.includes('8') && piece.color === chess.WHITE) ||\n          (to.includes('1') && piece.color === chess.BLACK))\n      );\n    },\n    [chess, pieceSize, toTranslation]\n  );\n\n  const findKing = useCallback(\n    (type: 'wk' | 'bk') => {\n      const board = chess.board();\n      for (let x = 0; x < board.length; x++) {\n        const row = board[x];\n        for (let y = 0; y < row.length; y++) {\n          const col = String.fromCharCode(97 + Math.round(x));\n\n          // eslint-disable-next-line no-shadow\n          const row = `${8 - Math.round(y)}`;\n          const square = `${col}${row}` as Square;\n\n          const piece = chess.get(square);\n          if (piece?.color === type.charAt(0) && piece.type === type.charAt(1))\n            return square;\n        }\n      }\n      return null;\n    },\n    [chess]\n  );\n\n  const moveProgrammatically = useCallback(\n    (from: Square, to: Square, promotionPiece?: PieceType) => {\n      const move = chess.move({\n        from,\n        to,\n        promotion: promotionPiece as any,\n      });\n\n      turn.value = chess.turn();\n\n      if (move == null) return;\n\n      const isCheckmate = chess.in_checkmate();\n\n      if (isCheckmate) {\n        const square = findKing(`${chess.turn()}k`);\n        if (!square) return;\n        controller?.highlight({ square, color: checkmateHighlight });\n      }\n\n      onChessboardMoveCallback?.({\n        move,\n        state: {\n          ...getChessboardState(chess),\n          in_promotion: promotionPiece != null,\n        },\n      });\n\n      setBoard(chess.board());\n    },\n    [\n      checkmateHighlight,\n      chess,\n      controller,\n      findKing,\n      onChessboardMoveCallback,\n      setBoard,\n      turn,\n    ]\n  );\n\n  const onMove = useCallback(\n    (from: Square, to: Square) => {\n      selectableSquares.value = [];\n      selectedSquare.value = null;\n      const lastMove = { from, to };\n      controller?.resetAllHighlightedSquares();\n      controller?.highlight({ square: lastMove.from });\n      controller?.highlight({ square: lastMove.to });\n\n      const in_promotion = isPromoting(from, to);\n      if (!in_promotion) {\n        moveProgrammatically(from, to);\n        return;\n      }\n\n      pieceRefs?.current?.[to]?.current?.enable(false);\n      showPromotionDialog({\n        type: chess.turn(),\n        onSelect: (piece) => {\n          moveProgrammatically(from, to, piece);\n          pieceRefs?.current?.[to]?.current?.enable(true);\n        },\n      });\n    },\n    [\n      chess,\n      controller,\n      isPromoting,\n      moveProgrammatically,\n      pieceRefs,\n      selectableSquares,\n      selectedSquare,\n      showPromotionDialog,\n    ]\n  );\n\n  const onSelectPiece = useCallback(\n    (square: Square) => {\n      selectedSquare.value = square;\n\n      const validSquares = (chess.moves({\n        square,\n      }) ?? []) as Square[];\n\n      // eslint-disable-next-line no-shadow\n      selectableSquares.value = validSquares.map((square) => {\n        const splittedSquare = square.split('x');\n        if (splittedSquare.length === 0) {\n          return square;\n        }\n\n        return splittedSquare[splittedSquare.length - 1] as Square;\n      });\n    },\n    [chess, selectableSquares, selectedSquare]\n  );\n\n  const moveTo = useCallback(\n    (to: Square) => {\n      if (selectedSquare.value != null) {\n        controller?.move({ from: selectedSquare.value, to: to });\n        return true;\n      }\n      return false;\n    },\n    [controller, selectedSquare.value]\n  );\n\n  const value = useMemo(() => {\n    return {\n      onMove,\n      onSelectPiece,\n      moveTo,\n      selectableSquares,\n      selectedSquare,\n      isPromoting,\n      turn,\n    };\n  }, [\n    isPromoting,\n    moveTo,\n    onMove,\n    onSelectPiece,\n    selectableSquares,\n    selectedSquare,\n    turn,\n  ]);\n\n  return (\n    <BoardOperationsContext.Provider value={value}>\n      {children}\n    </BoardOperationsContext.Provider>\n  );\n});\n\nconst BoardOperationsContextProvider = React.memo(\n  BoardOperationsContextProviderComponent\n);\n\nexport { BoardOperationsContextProvider, BoardOperationsContext };\n"],"mappings":"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"}