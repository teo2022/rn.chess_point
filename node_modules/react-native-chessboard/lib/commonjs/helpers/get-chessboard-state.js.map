{"version":3,"names":["getChessboardState","chess","in_check","in_checkmate","in_draw","in_stalemate","in_threefold_repetition","insufficient_material","game_over","fen"],"sources":["get-chessboard-state.ts"],"sourcesContent":["import type { ChessInstance } from 'chess.js';\n\ntype ChessboardStateFunctions = Pick<\n  ChessInstance,\n  | 'in_check'\n  | 'in_checkmate'\n  | 'in_draw'\n  | 'in_stalemate'\n  | 'in_threefold_repetition'\n  | 'insufficient_material'\n  | 'game_over'\n  | 'fen'\n>;\n\ntype RecordReturnTypes<T> = {\n  readonly [P in keyof T]: T[P] extends () => any ? ReturnType<T[P]> : T[P];\n};\n\nexport type ChessboardState = RecordReturnTypes<ChessboardStateFunctions>;\n\nexport const getChessboardState = (chess: ChessInstance): ChessboardState => {\n  return {\n    in_check: chess.in_check(),\n    in_checkmate: chess.in_checkmate(),\n    in_draw: chess.in_draw(),\n    in_stalemate: chess.in_stalemate(),\n    in_threefold_repetition: chess.in_threefold_repetition(),\n    insufficient_material: chess.insufficient_material(),\n    game_over: chess.game_over(),\n    fen: chess.fen(),\n  };\n};\n"],"mappings":";;;;;;;AAoBO,MAAMA,kBAAkB,GAAIC,KAAD,IAA2C;EAC3E,OAAO;IACLC,QAAQ,EAAED,KAAK,CAACC,QAAN,EADL;IAELC,YAAY,EAAEF,KAAK,CAACE,YAAN,EAFT;IAGLC,OAAO,EAAEH,KAAK,CAACG,OAAN,EAHJ;IAILC,YAAY,EAAEJ,KAAK,CAACI,YAAN,EAJT;IAKLC,uBAAuB,EAAEL,KAAK,CAACK,uBAAN,EALpB;IAMLC,qBAAqB,EAAEN,KAAK,CAACM,qBAAN,EANlB;IAOLC,SAAS,EAAEP,KAAK,CAACO,SAAN,EAPN;IAQLC,GAAG,EAAER,KAAK,CAACQ,GAAN;EARA,CAAP;AAUD,CAXM"}