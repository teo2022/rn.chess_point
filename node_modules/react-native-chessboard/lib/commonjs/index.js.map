{"version":3,"names":["styles","StyleSheet","create","container","aspectRatio","Chessboard","React","memo","boardSize","useChessboardProps","width","ChessboardContainerComponent","forwardRef","props","ref","chessboardRef","useRef","useImperativeHandle","move","params","current","highlight","resetAllHighlightedSquares","getState","resetBoard","fen","ChessboardContainer"],"sources":["index.tsx"],"sourcesContent":["import React, { useImperativeHandle, useRef } from 'react';\nimport { View, StyleSheet } from 'react-native';\n\nimport Background from './components/chessboard-background';\nimport { HighlightedSquares } from './components/highlighted-squares';\nimport { Pieces } from './components/pieces';\nimport { SuggestedDots } from './components/suggested-dots';\nimport { ChessboardContextProvider } from './context/board-context-provider';\nimport type { ChessboardRef } from './context/board-refs-context';\nimport {\n  ChessboardProps,\n  ChessboardPropsContextProvider,\n} from './context/props-context';\nimport { useChessboardProps } from './context/props-context/hooks';\nimport type { ChessboardState } from './helpers/get-chessboard-state';\n\nconst styles = StyleSheet.create({\n  container: {\n    aspectRatio: 1,\n  },\n});\n\nconst Chessboard: React.FC = React.memo(() => {\n  const { boardSize } = useChessboardProps();\n\n  return (\n    <View style={[styles.container, { width: boardSize }]}>\n      <Background />\n      <Pieces />\n      <HighlightedSquares />\n      <SuggestedDots />\n    </View>\n  );\n});\n\nconst ChessboardContainerComponent = React.forwardRef<\n  ChessboardRef,\n  ChessboardProps\n>((props, ref) => {\n  const chessboardRef = useRef<ChessboardRef>(null);\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      move: (params) => chessboardRef.current?.move?.(params),\n      highlight: (params) => chessboardRef.current?.highlight(params),\n      resetAllHighlightedSquares: () =>\n        chessboardRef.current?.resetAllHighlightedSquares(),\n      getState: () => chessboardRef?.current?.getState() as ChessboardState,\n      resetBoard: (params) => chessboardRef.current?.resetBoard(params),\n    }),\n    []\n  );\n\n  return (\n    <ChessboardPropsContextProvider {...props}>\n      <ChessboardContextProvider ref={chessboardRef} fen={props.fen}>\n        <Chessboard />\n      </ChessboardContextProvider>\n    </ChessboardPropsContextProvider>\n  );\n});\n\nconst ChessboardContainer = React.memo(ChessboardContainerComponent);\n\nexport type { ChessboardRef };\nexport default ChessboardContainer;\n"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAIA;;;;;;;;AAGA,MAAMA,MAAM,GAAGC,uBAAA,CAAWC,MAAX,CAAkB;EAC/BC,SAAS,EAAE;IACTC,WAAW,EAAE;EADJ;AADoB,CAAlB,CAAf;;AAMA,MAAMC,UAAoB,gBAAGC,cAAA,CAAMC,IAAN,CAAW,MAAM;EAC5C,MAAM;IAAEC;EAAF,IAAgB,IAAAC,yBAAA,GAAtB;EAEA,oBACE,6BAAC,iBAAD;IAAM,KAAK,EAAE,CAACT,MAAM,CAACG,SAAR,EAAmB;MAAEO,KAAK,EAAEF;IAAT,CAAnB;EAAb,gBACE,6BAAC,6BAAD,OADF,eAEE,6BAAC,cAAD,OAFF,eAGE,6BAAC,sCAAD,OAHF,eAIE,6BAAC,4BAAD,OAJF,CADF;AAQD,CAX4B,CAA7B;;AAaA,MAAMG,4BAA4B,gBAAGL,cAAA,CAAMM,UAAN,CAGnC,CAACC,KAAD,EAAQC,GAAR,KAAgB;EAChB,MAAMC,aAAa,GAAG,IAAAC,aAAA,EAAsB,IAAtB,CAAtB;EAEA,IAAAC,0BAAA,EACEH,GADF,EAEE,OAAO;IACLI,IAAI,EAAGC,MAAD;MAAA;;MAAA,gCAAYJ,aAAa,CAACK,OAA1B,oFAAY,sBAAuBF,IAAnC,2DAAY,mDAA8BC,MAA9B,CAAZ;IAAA,CADD;IAELE,SAAS,EAAGF,MAAD;MAAA;;MAAA,iCAAYJ,aAAa,CAACK,OAA1B,2DAAY,uBAAuBC,SAAvB,CAAiCF,MAAjC,CAAZ;IAAA,CAFN;IAGLG,0BAA0B,EAAE;MAAA;;MAAA,iCAC1BP,aAAa,CAACK,OADY,2DAC1B,uBAAuBE,0BAAvB,EAD0B;IAAA,CAHvB;IAKLC,QAAQ,EAAE;MAAA;;MAAA,OAAMR,aAAN,aAAMA,aAAN,iDAAMA,aAAa,CAAEK,OAArB,2DAAM,uBAAwBG,QAAxB,EAAN;IAAA,CALL;IAMLC,UAAU,EAAGL,MAAD;MAAA;;MAAA,iCAAYJ,aAAa,CAACK,OAA1B,2DAAY,uBAAuBI,UAAvB,CAAkCL,MAAlC,CAAZ;IAAA;EANP,CAAP,CAFF,EAUE,EAVF;EAaA,oBACE,6BAAC,4CAAD,EAAoCN,KAApC,eACE,6BAAC,+CAAD;IAA2B,GAAG,EAAEE,aAAhC;IAA+C,GAAG,EAAEF,KAAK,CAACY;EAA1D,gBACE,6BAAC,UAAD,OADF,CADF,CADF;AAOD,CA1BoC,CAArC;;AA4BA,MAAMC,mBAAmB,gBAAGpB,cAAA,CAAMC,IAAN,CAAWI,4BAAX,CAA5B;;eAGee,mB"}