{"version":3,"names":[],"sources":["types.ts"],"sourcesContent":["/* eslint-disable no-undef */\n\nimport type { ChessInstance, Square } from 'chess.js';\n\ntype Player = ReturnType<ChessInstance['turn']>;\ntype Type = 'q' | 'r' | 'n' | 'b' | 'k' | 'p';\ntype PieceType = `${Player}${Type}`;\n\ntype PiecesType = Record<PieceType, ReturnType<typeof require>>;\ntype Vector<T = number> = {\n  x: T;\n  y: T;\n};\n\ntype ChessMove = {\n  from: Square;\n  to: Square;\n};\n\ntype MoveType = { from: Square; to: Square };\n\nexport type {\n  Player,\n  Type,\n  PieceType,\n  PiecesType,\n  Vector,\n  ChessMove,\n  MoveType,\n};\n"],"mappings":""}